
allprojects {
    group = 'org.spine3.tools'

    project.ext {
        MAVEN_REPOSITORY_URL = 'http://maven.teamdev.com/repository/spine'
        SPINE_VERSION = '0.5.3-SNAPSHOT'
        SPINE_PROTOBUF_PLUGIN_VERSION = '1.4.9'
        PROTOBUF_VERSION = '3.0.0'
        SLF4J_VERSION = '1.7.12'
    }
}

final String CREDENTIALS_FILE_PATH = "credentials.properties"
def repositoryUserName = null
def repositoryUserPassword = null
Properties properties = new Properties()
File credentialsFile = file(CREDENTIALS_FILE_PATH)
if (credentialsFile.exists()) {
    properties.load(credentialsFile.newDataInputStream())
    repositoryUserName = properties.getProperty("user.name")
    repositoryUserPassword = properties.getProperty("user.password")
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.7;
    targetCompatibility = 1.7;

    // Set Java home to point to JDK7 in gradle.properties file.
    //
    // For Mac OS X, it looks like this:
    //
    // # suppress inspection "UnusedProperty"
    // org.gradle.java.home=/Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home/

    repositories {
        mavenCentral()
    }

    dependencies {
        // NOTE: do not add `gradleApi()` or `localGroovy()` dependencies here to avoid problems.
        // They depend on an old Guava version. Add them only in sub-projects which need these dependencies.

        compile "com.google.protobuf:protobuf-java:$PROTOBUF_VERSION"
        compile group: 'org.slf4j', name:'slf4j-api', version: SLF4J_VERSION

        //Use jdk14 bindings for test purposes only.
        testCompile group: 'org.slf4j', name: 'slf4j-jdk14', version: SLF4J_VERSION
        testCompile(group: 'junit', name: 'junit', version: '4.12')
    }

    final String SRC_DIR = "$projectDir/plugin/src"

    sourceSets {
        main {
            groovy.srcDirs += "$SRC_DIR/main/groovy"
            resources.srcDirs += "$SRC_DIR/main/resources"
        }
        test {
            groovy.srcDirs += "$SRC_DIR/test/groovy"
            resources.srcDirs += "$SRC_DIR/test/resources"
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId "$group"
                artifactId "$project.name"
                version "${project.version}"

                from components.java
            }
        }
    }
    publishing {
        repositories {
            maven {
                credentials {
                    username "$repositoryUserName"
                    password "$repositoryUserPassword"
                }
                url "${project.MAVEN_REPOSITORY_URL}"
            }
        }
    }
}

repositories {
    mavenCentral()
}

task readPublishingCredentials << {
    if (repositoryUserName == null || repositoryUserPassword == null) {
        throw new InvalidUserDataException("Please set up valid credentials. " +
                "Credentials should be set in ${CREDENTIALS_FILE_PATH} file in the project\'s root.")
    }
    println "Publishing build as ${repositoryUserName}"
}

task publish << {}

subprojects.each { project ->
    def credentialsTask = getTasksByName("readPublishingCredentials", false)
    project.getTasksByName("publish", false).each { task ->
        task.dependsOn credentialsTask
    }
    publish.dependsOn project.getTasksByName("publish", false)
}
