/*
 * Copyright 2017, TeamDev Ltd. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

        maven { url = 'http://maven.teamdev.com/repository/spine' }
        maven { url = 'http://maven.teamdev.com/repository/spine-snapshots' }
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-java:3.2.0"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.0"
        classpath "org.spine3.tools:protobuf-plugin:0.8.6-SNAPSHOT"
    }
    configurations.all({
        resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
    })
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.spine3.tools.protobuf-plugin'

repositories {
    mavenLocal()
    mavenCentral()

    maven { url = 'http://maven.teamdev.com/repository/spine' }
    maven { url = 'http://maven.teamdev.com/repository/spine-snapshots' }
}

dependencies {
    compile "org.spine3:spine-server-core:0.8.29-SNAPSHOT"
}

protobuf {
    generatedFilesBaseDir = "$projectDir/generated";
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.generateDescriptorSet = true
            task.descriptorSetOptions.path = "${projectDir}/build/descriptors/${task.sourceSet.name}.desc"
            task.descriptorSetOptions.includeImports = false
        }
    }
}

sourceSets {
    main {
        proto.srcDirs = ["$projectDir/src/main/proto"]
        java.srcDirs = ["$projectDir/generated/main/java",
                        "$projectDir/generated/main/spine",
                        "$projectDir/src/main/java"]
        resources.srcDirs = ["$projectDir/generated/main/resources"]
    }
}
